import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sb
%matplotlib inline
data_link="http://bit.ly/w-data"
data=pd.read_csv(data_link)
data.head()
print("no. of rows = ",data.shape[0])
print("no. of columns= ",data.shape[1])
data.info()
data.describe()
data.plot(x="Hours",y="Scores",style="o")
plt.title("Hours vs Score")
plt.xlabel("Hours studied")
plt.ylabel("Percentage")
plt.show()
x=data.iloc[:,:-1].values
y=data.iloc[:,1].values
# splitting data into training and testing sets
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=0)
from sklearn.linear_model import LinearRegression 
regressor = LinearRegression()
regressor.fit(x_train,y_train)
print("Training complete")
# Plotting the regression line 
line=regressor.coef_*x+regressor.intercept_

#Plotting for the test data
plt.scatter(x,y)
plt.plot(x,line);
plt.show()

#Testing data
print(x_test)

#Predicting the scores
y_predict=regressor.predict(x_test)

df=pd.DataFrame({"Actual score":y_test,"Predicted score":y_predict})
df

from sklearn import metrics
print("Mean Absolute error:",metrics.mean_absolute_error(y_test,y_predict))

y_predict=regressor.predict([[9.25]])
print("Predicted score:",y_predict[0])
